name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Build Output
        id: sbt-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Install Dependencies
        if: steps.sbt-cache.outputs.cache-hit != 'true'
        run: sbt update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  compile:
    runs-on: ubuntu-latest
    needs: [ install ]
    steps:
    - name: Run Compile
      run: sbt compile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    runs-on: ubuntu-latest
    needs: [ install ]
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run Test
        run: sbt test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  artifacts:
    runs-on: ubuntu-latest
    needs: [ compile, test ]
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@couchmate'
      - name: 'Get Current Version'
        id: currentVersion
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: benjlevesque/short-sha@v1.1
        id: shortSha
      - name: Docker Login
        run: docker login https://docker.pkg.github.com -u halfmatthalfcat -p ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout sha
        run: |
          git branch --track master origin/master && git reset --hard $GITHUB_SHA
          git config --global user.email "matt@couchmate.com"
          git config --global user.name "Matt Oliver"
      - name: Run Release
        run: sbt "release release-version ${{ steps.currentVersion.outputs.tag }}-${{ steps.shortSha.outputs.sha }} with-defaults"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Typescript Definitions
        run: sbt "webNodeModules; tsTranspile"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Typescript Definitions
        uses: actions/upload-artifact@v2
        with:
          name: typescript
          path: target/typescript
      - name: Publish Typescript definitions
        run: npm publish ./target/typescript
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}