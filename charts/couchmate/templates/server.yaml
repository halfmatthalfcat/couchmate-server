apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchmate
  labels:
    app: server
    env: {{.Values.env}}
spec:
  replicas: {{.Values.replicas}}
  selector:
    matchLabels:
      app: server
      env: {{.Values.env}}
  template:
    metadata:
      labels:
        app: server
        env: {{.Values.env}}
    spec:
      serviceAccountName: server-sa
      containers:
        - name: server
          image: "{{.Values.registry.name}}/{{.Values.images.org}}/{{.Values.images.name}}:{{.Values.images.tag}}"
          ports:
            - containerPort: 8080
              name: server-ext
            - containerPort: 2551
              name: server-int
            - containerPort: 8558
              name: management
          env:
            - name: ENV
              value: {{.Values.env}}
            - name: POSTGRES_HOST
              value: {{.Values.app.db.host}}
            - name: POSTGRES_PORT
              value: "{{.Values.app.db.port}}"
            - name: POSTGRES_DB
              value: {{.Values.app.db.name}}
            - name: POSTGRES_USER
              value: {{.Values.app.db.username}}
            - name: POSTGRES_PASSWORD
              value: {{.Values.app.db.password}}
            - name: MAILGUN_API_KEY
              value: {{.Values.app.mailgun.apiKey}}
            - name: MAILGUN_VALIDATION_KEY
              value: {{.Values.app.mailgun.validationKey}}
            - name: HOSTNAME
              value: {{if ne .Values.env "prod"}}{{.Values.env}}.{{end}}couchmate.com
          readinessProbe:
            httpGet:
              path: /ready
              port: management
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 20
          livenessProbe:
            httpGet:
              path: /alive
              port: management
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: server
  labels:
    app: server
    env: {{.Values.env}}
spec:
  type: ClusterIP
  selector:
    app: server
    env: {{.Values.env}}
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: server-ext
    - name: management
      protocol: TCP
      port: 8000
      targetPort: management
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: server
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: letsencrypt-issuer
    external-dns.alpha.kubernetes.io/ttl: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "10800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "10800"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
    - hosts:
        - {{if eq .Values.env "prod"}}api{{else}}{{.Values.env}}-api{{end}}.couchmate.com
      secretName: {{.Values.env}}-api-tls
  rules:
    - host: {{if eq .Values.env "prod"}}api{{else}}{{.Values.env}}-api{{end}}.couchmate.com
      http:
        paths:
          - path: /(ws|register|reset)
            backend:
              serviceName: server
              servicePort: 80
          - path: /api/.+
            backend:
              serviceName: server
              servicePort: 80
