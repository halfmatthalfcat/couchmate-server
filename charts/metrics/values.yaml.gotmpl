env: {{.Values.env}}

clientId: {{.Values.oauthClientId}}
clientSecret: {{.Values.oauthClientSecret}}
doToken: {{.Values.doToken}}
spacesKey: {{.Values.spacesKey}}
spacesSecret: {{.Values.spacesSecret}}

prometheus-operator:
  rbac:
    create: true
  prometheus:
    enabled: true
    disableCompaction: true
    scrapeInterval: 10s
    evaluationInterval: 30s
    persistence:
      enabled: true
    ruleNamespaceSelector: {}
    serviceMonitorSelector: {}
    podMonitorSelector: {}
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/issuer: letsencrypt-issuer
        nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        service.beta.kubernetes.io/do-loadbalancer-name: couchmate-{{.Values.env}}-grafana
        service.beta.kubernetes.io/do-loadbalancer-algorithm: 'least_connections'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'https'
        service.beta.kubernetes.io/do-loadbalancer-http-ports: '80'
        service.beta.kubernetes.io/do-loadbalancer-tls-ports: '443'
        service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: 'true'
        service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: 'true'
        external-dns.alpha.kubernetes.io/ttl: '120'
      hosts:
        - name: prometheus{{if ne .Values.env "prod"}}.{{.Values.env}}{{end}}.couchmate.com
          path: /
      tls:
        - hosts:
            - prometheus{{if ne .Values.env "prod"}}.{{.Values.env}}{{end}}.couchmate.com
          secretName: {{.Values.env}}-prometheus-tls
    containers:
      - name: thanos-sidecar-2
        image: thanosio/thanos:v0.14.0
        args:
          - sidecar
          - --tsdb.path
          - /prometheus/prometheus-db
          - --prometheus.url
          - "http://localhost:9090"
          - --objstore.config-file
          - /tmp/objstore/thanos.yaml
          - --grpc-address
          - 0.0.0.0:10901
          - --http-address
          - 0.0.0.0:10902
        ports:
          - name: grpc
            containerPort: 10901
            protocol: TCP
          - name: http
            containerPort: 10902
            protocol: TCP
        volumeMounts:
          - name: thanos-objstore-config
            mountPath: /tmp/objstore
            readOnly: true
          - name: prometheus-metrics-prometheus-operato-prometheus-db
            mountPath: /prometheus
    volumes:
      - name: thanos-objstore-config
        secret:
          secretName: thanos-objstore-config
          items:
            - key: thanos.yaml
              path: thanos.yaml
  alertmanager:
    enabled: true
    persistence:
      enabled: true
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/issuer: letsencrypt-issuer
        nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        service.beta.kubernetes.io/do-loadbalancer-name: couchmate-{{.Values.env}}-alert
        service.beta.kubernetes.io/do-loadbalancer-algorithm: 'least_connections'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'https'
        service.beta.kubernetes.io/do-loadbalancer-http-ports: '80'
        service.beta.kubernetes.io/do-loadbalancer-tls-ports: '443'
        service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: 'true'
        service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: 'true'
        external-dns.alpha.kubernetes.io/ttl: '120'
      hosts:
        - name: alert{{if ne .Values.env "prod"}}.{{.Values.env}}{{end}}.couchmate.com
          path: /
      tls:
        - hosts:
            - alert{{if ne .Values.env "prod"}}.{{.Values.env}}{{end}}.couchmate.com
          secretName: {{.Values.env}}-alert-tls
    config:
      global:
        slack_api_url: https://hooks.slack.com/services/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
      receivers:
        - name: slack-alerts
          slack_configs:
            - channel: "#alerts"
              send_resolved: true
      route:
        group_by:
          - alertname
        group_interval: 5m
        group_wait: 10s
        receiver: slack-alerts
        repeat_interval: 3h
        routes:
          - receiver: slack-alerts
            match:
              severity: info
            # Basically never repeat
            repeat_interval: 8737h

  kubelet:
    serviceMonitor:
      cAdvisorMetricRelabelings:
        - sourceLabels: [id]
          regex: '/kubepods/besteffort/.*'
          action: keep
        - sourceLabels: [container]
          regex: '.*'
          action: keep
        - sourceLabels: [__name__, image]
          regex: container_([a-z_]+);
          action: drop
  kubeProxy:
    enabled: false
thanos:
  existingObjstoreSecret: thanos-objstore-config
  existingObjstoreSecretItems:
    - key: thanos.yaml
      path: objstore.yml
  querier:
    dnsDiscovery:
      sidecarsService: metrics-prometheus-thanos
      sidecarsNamespace: metrics
  bucketweb:
    enabled: true
  compactor:
    enabled: true
  storegateway:
    enabled: true
grafana:
  admin:
    password: abcabc
  persistence:
    enabled: false
  imageRenderer:
    enabled: true
  datasources:
    secretName: data-providers-secret
  dashboardsProvider:
    enabled: true
  dashboardsConfigMaps:
    - configMapName: grafana-dashboard-application
      fileName: application.json
    - configMapName: grafana-dashboard-resources
      fileName: resources.json
  extraConfigmaps:
    - name: alert-notification-channels
      mountPath: /opt/bitnami/grafana/conf/provisioning/notifiers
      readOnly: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/issuer: letsencrypt-issuer
      nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
      service.beta.kubernetes.io/do-loadbalancer-name: couchmate-{{.Values.env}}-prometheus
      service.beta.kubernetes.io/do-loadbalancer-algorithm: 'least_connections'
      service.beta.kubernetes.io/do-loadbalancer-protocol: 'https'
      service.beta.kubernetes.io/do-loadbalancer-http-ports: '80'
      service.beta.kubernetes.io/do-loadbalancer-tls-ports: '443'
      service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: 'true'
      service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: 'true'
      external-dns.alpha.kubernetes.io/ttl: '120'
    hosts:
      - name: grafana{{if ne .Values.env "prod"}}.{{.Values.env}}{{end}}.couchmate.com
        path: /
    tls:
      - hosts:
          - grafana{{if ne .Values.env "prod"}}.{{.Values.env}}{{end}}.couchmate.com
        secretName: {{.Values.env}}-grafana-tls